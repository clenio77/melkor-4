# Docker Compose para desenvolvimento do Melkor 3.0
# Inclui PostgreSQL, Redis e ambiente de desenvolvimento

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: melkor_postgres
    environment:
      POSTGRES_DB: melkor_dev
      POSTGRES_USER: melkor_user
      POSTGRES_PASSWORD: melkor_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - melkor_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U melkor_user -d melkor_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: melkor_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - melkor_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin (Opcional - para gerenciar PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: melkor_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@melkor.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - melkor_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis Commander (Opcional - para gerenciar Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: melkor_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - melkor_network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  melkor_network:
    driver: bridge
